{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App (1).js","index.js"],"names":["Navbar","props","_jsx","className","concat","mode","children","_jsxs","href","title","type","id","role","placeholder","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","_Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundcolor","rows","handleupclick","newtext","toUpperCase","showAlert","handleloclick","toLowerCase","handleclearclick","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","backgroundColor","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.2560f982.chunk.js","sourcesContent":["import React from 'react'\r\n//import PropTypes from 'prop-types'\r\n//import{Link}from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      \r\n      <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          {/*<li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link><Link/>\r\n  </li>*/}\r\n          {/*<li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/AboutHere\">{props.abouttext}</Link>\r\n</li>*/}\r\n          \r\n            </ul>\r\n          \\\r\n        <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form>\r\n\r\n        <div className={`form-check form-switch text-${props.mode===`dark`?`light`:`dark`} mx-3`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\n{/*Navbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    abouttext: PropTypes.string.isRequired\r\n  }\r\n\r\n  Navbar.defaultProps = {\r\n    title :'Set Title Here',\r\n    abouttext : 'AboutHere'\r\n\r\n  }*/}\r\n\r\n  \r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleupclick = ()=>{\r\n        console.log(\"Upper Case Got Clicked\" + text);\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Coverted to upper case\", \"success\");\r\n    }\r\n    const handleloclick = ()=>{\r\n        console.log(\"Lower Case Got Clicked\" + text);\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Coverted to lower case\", \"success\");\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        console.log(\"Remove Extra Space Got Clicked\" + text);\r\n        let newtext = text.split(/[  ]+/);\r\n        setText(newtext.join(' '))\r\n        props.showAlert(\"Extra Space Removed\", \"success\");\r\n    }\r\n    const handleCopy = ()=>{\r\n        console.log(\"Copy Text Got Clicked\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied\", \"success\");\r\n    }\r\n    const handleclearclick = ()=>{\r\n        console.log(\"Clear Text Got Clicked\" + text);\r\n        let newtext = ' ';\r\n        setText(newtext)\r\n        props.showAlert(\"Text got cleared\", \"success\");\r\n         \r\n    }\r\n    const handleonchange = (event)=>{\r\n        console.log(\"On Change\");\r\n        setText(event.target.value)\r\n        \r\n        \r\n    }\r\n    const [text, setText] = useState('Enter Text Here');\r\n   // text= \"new text\" ;//Wrong way to change the state\r\n   // setText(\"new text\");//Correct way to change the state\r\n  return (\r\n    <>\r\n   <div className=\"container\" style={{color: props.mode==='dark'?'white':'#052c65'}}>\r\n    <h1 >{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={text} onChange={handleonchange} style={{backgroundcolor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'black':'black'}}  id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleupclick}>Covert To Uppercase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleloclick}>Covert To Lowercase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleclearclick}>Clear Text</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n</div>\r\n<div className=\"container\" style={{color: props.mode==='dark'?'black':'#052c65'}} my-2>\r\n    <h2>Your Text Summary</h2>\r\n    <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n    <p>{0.008*text.split(\" \").length}Minutes read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n\r\n</div>\r\n</>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower= word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n     props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade \r\n     show`} role=\"alert\">\r\n     <strong>{capitalize(props.alert.msg)}</strong>: {props.alert.msg}\r\n     <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\"\r\n      aria-label=\"Close\"></button>\r\n</div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert","\nimport { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n//import About from \"./components/About\";\n//import {\n  //BrowserRouter as Router,\n  //Switch,\n  //Route,\n  \n  \n//} from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  const[mode, setMode] = useState(`dark`);// weather darkmode is enabled or not\n  const[alert, setAlert]= useState(null);\n\n  const showAlert =(message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() =>{\n      setAlert(null);\n\n    }, 1500);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#052c65';\n      showAlert(\"Dark mode has been enabled\" , \"success\");\n      document.title = 'New-App - Dark Mode';\n    }\n     else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n     showAlert(\"Light mode has been enabled\" , \"success\");\n     document.title = 'New-App - Light Mode';\n  }\n  }\n  \n   return (\n    <>\n  {/*<Navbar title =\"New-App\"  abouttext= \"About New-App\"/>*/}\n {/*<Navbar/>*/}\n {/*<Router>*/}\n <Navbar title = \"New-App\" mode={mode} toggleMode={toggleMode}/>\n <Alert alert={alert}/>\n \n <div className=\"container my-3\">\n {/*<Switch>\n          <Route exact path=\"/AboutHere\">\n            <About />\n            </Route>\n   </Router> */}\n          {/*<Route exact path=\"/\">*/}\n          <TextForm showAlert ={showAlert} heading = \"Enter The Text To Analyze Below\"  mode={mode}/>\n          {/*</Route>\n           </Switch>*/}\n\n           </div>\n  {/* </Router> */}\n \n\n\n\n</>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App (1).js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}